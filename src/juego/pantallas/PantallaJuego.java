/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juego.pantallas;

import juego.Juego;
import cliente.ClienteUtils;
import cliente.Despachador;
import cliente.escuchadores.EscuchadorConexion;
import cliente.escuchadores.EscuchadorMensajes;
import cliente.eventos.EventoCliente;
import cliente.eventos.EventoMensaje;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import juego.dibujo.Dibujador;
import juego.negocio.Cubilete;
import juego.negocio.Dado;
import juego.negocio.JuegoCompartido;
import juego.negocio.Jugada;
import juego.negocio.Jugador;

/**
 *
 * @author Marcelo
 */
public class PantallaJuego extends javax.swing.JFrame implements EscuchadorMensajes, EscuchadorConexion {
    
    private Jugador jugadorYO;
    private Dibujador dibujador;
    
    private Cubilete cubilete;
    
    private int contPaint = 0;

    /**
     * Creates new form PantallaJuego
     */
    public PantallaJuego() {
        initComponents();
        
        IniciarMisComponentes();
    }
    
    private void IniciarMisComponentes() {
        Despachador.listaEscuchadores.add(EscuchadorMensajes.class, this);
        Despachador.listaEscuchadores.add(EscuchadorConexion.class, this);
        
        cubilete = new Cubilete();
        
        PreparaEscuchadores();
        PrepararRadioButtons();
        
//        jButton1.setVisible(false);
    }
    
    private void PrepararRadioButtons() {
        radbtn_balas.setActionCommand(Jugada.BALAS);
        radbtn_tontos.setActionCommand(Jugada.TONTOS);
        radbtn_trenes.setActionCommand(Jugada.TRENES);
        radbtn_cuadras.setActionCommand(Jugada.CUADRAS);
        radbtn_quinas.setActionCommand(Jugada.QUINAS);
        radbtn_senas.setActionCommand(Jugada.SENAS);
        radbtn_escalera.setActionCommand(Jugada.ESCALERA);
        radbtn_full.setActionCommand(Jugada.FULL);
        radbtn_poker.setActionCommand(Jugada.POKER);
        radbtn_grande.setActionCommand(Jugada.GRANDE);
    }
    
    private void PreparaEscuchadores() {
        btn_gastarturno.addChangeListener(e -> {
            btn_lanzarDados.setEnabled(btn_gastarturno.isEnabled());
        });
        
        chkbox_usarDado1.addChangeListener(e -> cubilete.getDado(0).setSeleccionado(chkbox_usarDado1.isSelected()));
        chkbox_usarDado2.addChangeListener(e -> cubilete.getDado(1).setSeleccionado(chkbox_usarDado2.isSelected()));
        chkbox_usarDado3.addChangeListener(e -> cubilete.getDado(2).setSeleccionado(chkbox_usarDado3.isSelected()));
        chkbox_usarDado4.addChangeListener(e -> cubilete.getDado(3).setSeleccionado(chkbox_usarDado4.isSelected()));
        chkbox_usarDado5.addChangeListener(e -> cubilete.getDado(4).setSeleccionado(chkbox_usarDado5.isSelected()));
        
        radbtn_balas.addChangeListener(e -> btn_gastarturno.setEnabled(radbtn_balas.isEnabled()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupJugadas = new javax.swing.ButtonGroup();
        btn_gastarturno = new javax.swing.JButton();
        pnl_papel = new javax.swing.JPanel();
        pnl_meza = new javax.swing.JPanel();
        pnl_guardarJugada = new javax.swing.JPanel();
        radbtn_balas = new javax.swing.JRadioButton();
        radbtn_tontos = new javax.swing.JRadioButton();
        radbtn_trenes = new javax.swing.JRadioButton();
        radbtn_cuadras = new javax.swing.JRadioButton();
        radbtn_quinas = new javax.swing.JRadioButton();
        radbtn_senas = new javax.swing.JRadioButton();
        radbtn_escalera = new javax.swing.JRadioButton();
        radbtn_full = new javax.swing.JRadioButton();
        radbtn_poker = new javax.swing.JRadioButton();
        radbtn_grande = new javax.swing.JRadioButton();
        pnl_dados = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_dado1 = new javax.swing.JTextField();
        txt_dado2 = new javax.swing.JTextField();
        txt_dado3 = new javax.swing.JTextField();
        chkbox_usarDado1 = new javax.swing.JCheckBox();
        txt_dado4 = new javax.swing.JTextField();
        txt_dado5 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_lanzamientosRestantes = new javax.swing.JLabel();
        btn_lanzarDados = new javax.swing.JButton();
        chkbox_usarDado2 = new javax.swing.JCheckBox();
        chkbox_usarDado3 = new javax.swing.JCheckBox();
        chkbox_usarDado4 = new javax.swing.JCheckBox();
        chkbox_usarDado5 = new javax.swing.JCheckBox();
        btn_voltearDado1 = new javax.swing.JButton();
        btn_voltearDado2 = new javax.swing.JButton();
        btn_voltearDado3 = new javax.swing.JButton();
        btn_voltearDado4 = new javax.swing.JButton();
        btn_voltearDado5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        btn_gastarturno.setText("Gastar turno");
        btn_gastarturno.setEnabled(false);
        btn_gastarturno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gastarturnoActionPerformed(evt);
            }
        });

        pnl_papel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnl_papelLayout = new javax.swing.GroupLayout(pnl_papel);
        pnl_papel.setLayout(pnl_papelLayout);
        pnl_papelLayout.setHorizontalGroup(
            pnl_papelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );
        pnl_papelLayout.setVerticalGroup(
            pnl_papelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnl_guardarJugada.setBorder(javax.swing.BorderFactory.createTitledBorder("Guardar jugada como"));

        buttonGroupJugadas.add(radbtn_balas);
        radbtn_balas.setText("Balas");
        radbtn_balas.setEnabled(false);

        buttonGroupJugadas.add(radbtn_tontos);
        radbtn_tontos.setText("Tontos");
        radbtn_tontos.setEnabled(false);

        buttonGroupJugadas.add(radbtn_trenes);
        radbtn_trenes.setText("Trenes");
        radbtn_trenes.setEnabled(false);

        buttonGroupJugadas.add(radbtn_cuadras);
        radbtn_cuadras.setText("Cuadras");
        radbtn_cuadras.setEnabled(false);

        buttonGroupJugadas.add(radbtn_quinas);
        radbtn_quinas.setText("Quinas");
        radbtn_quinas.setEnabled(false);

        buttonGroupJugadas.add(radbtn_senas);
        radbtn_senas.setText("Senas");
        radbtn_senas.setEnabled(false);

        buttonGroupJugadas.add(radbtn_escalera);
        radbtn_escalera.setText("Escalera");
        radbtn_escalera.setEnabled(false);

        buttonGroupJugadas.add(radbtn_full);
        radbtn_full.setText("Full");
        radbtn_full.setEnabled(false);

        buttonGroupJugadas.add(radbtn_poker);
        radbtn_poker.setText("Poker");
        radbtn_poker.setEnabled(false);

        buttonGroupJugadas.add(radbtn_grande);
        radbtn_grande.setText("GRANDE");
        radbtn_grande.setEnabled(false);

        javax.swing.GroupLayout pnl_guardarJugadaLayout = new javax.swing.GroupLayout(pnl_guardarJugada);
        pnl_guardarJugada.setLayout(pnl_guardarJugadaLayout);
        pnl_guardarJugadaLayout.setHorizontalGroup(
            pnl_guardarJugadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_guardarJugadaLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnl_guardarJugadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radbtn_balas)
                    .addComponent(radbtn_tontos)
                    .addComponent(radbtn_trenes)
                    .addComponent(radbtn_cuadras)
                    .addComponent(radbtn_quinas)
                    .addComponent(radbtn_senas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_guardarJugadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radbtn_escalera)
                    .addComponent(radbtn_full)
                    .addComponent(radbtn_poker)
                    .addComponent(radbtn_grande))
                .addGap(28, 28, 28))
        );
        pnl_guardarJugadaLayout.setVerticalGroup(
            pnl_guardarJugadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_guardarJugadaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_guardarJugadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_guardarJugadaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(radbtn_balas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radbtn_tontos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radbtn_trenes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radbtn_cuadras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radbtn_quinas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radbtn_senas))
                    .addGroup(pnl_guardarJugadaLayout.createSequentialGroup()
                        .addComponent(radbtn_escalera)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radbtn_full)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radbtn_poker)
                        .addGap(46, 46, 46)
                        .addComponent(radbtn_grande)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pnl_dados.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel1.setText("dado1:");

        txt_dado1.setFocusable(false);

        txt_dado2.setFocusable(false);

        txt_dado3.setFocusable(false);

        chkbox_usarDado1.setSelected(true);
        chkbox_usarDado1.setText("usar");
        chkbox_usarDado1.setEnabled(false);

        txt_dado4.setFocusable(false);

        txt_dado5.setFocusable(false);

        jLabel2.setText("dado2:");

        jLabel3.setText("dado3:");

        jLabel4.setText("dado4:");

        jLabel5.setText("dado5:");

        jLabel6.setText("Lanzamientos restantes:");

        lbl_lanzamientosRestantes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_lanzamientosRestantes.setText("2");

        btn_lanzarDados.setText("Lanzar Dados");
        btn_lanzarDados.setEnabled(false);
        btn_lanzarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lanzarDadosActionPerformed(evt);
            }
        });

        chkbox_usarDado2.setSelected(true);
        chkbox_usarDado2.setText("usar");
        chkbox_usarDado2.setEnabled(false);

        chkbox_usarDado3.setSelected(true);
        chkbox_usarDado3.setText("usar");
        chkbox_usarDado3.setEnabled(false);

        chkbox_usarDado4.setSelected(true);
        chkbox_usarDado4.setText("usar");
        chkbox_usarDado4.setEnabled(false);

        chkbox_usarDado5.setSelected(true);
        chkbox_usarDado5.setText("usar");
        chkbox_usarDado5.setEnabled(false);

        btn_voltearDado1.setText("voltear");
        btn_voltearDado1.setEnabled(false);
        btn_voltearDado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltearDado1ActionPerformed(evt);
            }
        });

        btn_voltearDado2.setText("voltear");
        btn_voltearDado2.setEnabled(false);
        btn_voltearDado2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltearDado2ActionPerformed(evt);
            }
        });

        btn_voltearDado3.setText("voltear");
        btn_voltearDado3.setEnabled(false);
        btn_voltearDado3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltearDado3ActionPerformed(evt);
            }
        });

        btn_voltearDado4.setText("voltear");
        btn_voltearDado4.setEnabled(false);
        btn_voltearDado4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltearDado4ActionPerformed(evt);
            }
        });

        btn_voltearDado5.setText("voltear");
        btn_voltearDado5.setEnabled(false);
        btn_voltearDado5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltearDado5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_dadosLayout = new javax.swing.GroupLayout(pnl_dados);
        pnl_dados.setLayout(pnl_dadosLayout);
        pnl_dadosLayout.setHorizontalGroup(
            pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_dadosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_lanzarDados)
                .addGap(75, 75, 75))
            .addGroup(pnl_dadosLayout.createSequentialGroup()
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_lanzamientosRestantes))
                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_dadosLayout.createSequentialGroup()
                                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_dado5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_dado4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_dado3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_dado2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                                        .addComponent(chkbox_usarDado3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_voltearDado3))
                                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                                        .addComponent(chkbox_usarDado4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_voltearDado4))
                                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                                        .addComponent(chkbox_usarDado5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_voltearDado5))
                                    .addGroup(pnl_dadosLayout.createSequentialGroup()
                                        .addComponent(chkbox_usarDado2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_voltearDado2))))
                            .addGroup(pnl_dadosLayout.createSequentialGroup()
                                .addComponent(txt_dado1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkbox_usarDado1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_voltearDado1)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pnl_dadosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txt_dado1, txt_dado2, txt_dado3, txt_dado4, txt_dado5});

        pnl_dadosLayout.setVerticalGroup(
            pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_dadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_dado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkbox_usarDado1)
                    .addComponent(btn_voltearDado1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_dado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(chkbox_usarDado2)
                    .addComponent(btn_voltearDado2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_dado3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(chkbox_usarDado3)
                    .addComponent(btn_voltearDado3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_dado4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(chkbox_usarDado4)
                    .addComponent(btn_voltearDado4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_dado5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(chkbox_usarDado5))
                    .addComponent(btn_voltearDado5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_lanzamientosRestantes, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_lanzarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setText("simular Grande");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_mezaLayout = new javax.swing.GroupLayout(pnl_meza);
        pnl_meza.setLayout(pnl_mezaLayout);
        pnl_mezaLayout.setHorizontalGroup(
            pnl_mezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_mezaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_mezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_guardarJugada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_mezaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );
        pnl_mezaLayout.setVerticalGroup(
            pnl_mezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_mezaLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_dados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_guardarJugada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl_meza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_gastarturno)
                        .addContainerGap())
                    .addComponent(pnl_papel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl_papel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_gastarturno)
                .addGap(6, 6, 6))
            .addComponent(pnl_meza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_gastarturnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gastarturnoActionPerformed
        // TODO add your handling code here:

        if (radbtn_balas.isEnabled() && cubilete.getLanzamientos() < 2) {
            
            if (CantidadRadioButtonSeleccionada() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Ninguna Jugada Seleccionada !!");
                return;
            }
            String jugada = buttonGroupJugadas.getSelection().getActionCommand();

            if (jugada != null && !jugada.isEmpty()) {
                int res = Jugada.InsertarJugada(jugadorYO, cubilete, jugada);
                switch (res) {
                    case 0:
//                        if (jugadorYO.isGanador()) {
//                            JOptionPane.showMessageDialog(rootPane, "Sos el ganador !!");
//                        }

                        //No hubo errores. Enviamos la JUGADA al servidor.
                        String stringJugada = ClienteUtils.CHAR_DELIMITADOR
                                + "ganador" + ClienteUtils.CHAR_IGUALDAD + jugadorYO.isGanador() + ClienteUtils.CHAR_DELIMITADOR
                                + jugada + ClienteUtils.CHAR_IGUALDAD + jugadorYO.getValorCasilla(jugada);
                        JuegoCompartido.clienteSocket.GastarTurnoConJugada(stringJugada);

                        break;
                    case Jugada.ERROR_ESCALERA:
                        JOptionPane.showMessageDialog(rootPane, "No es Escalera !!");
                        break;
                    case Jugada.ERROR_FULL:
                        JOptionPane.showMessageDialog(rootPane, "No es Full !!");
                        break;
                    case Jugada.ERROR_POKER:
                        JOptionPane.showMessageDialog(rootPane, "No es Poker !!");
                        break;
                    case Jugada.ERROR_GRANDE:
                        JOptionPane.showMessageDialog(rootPane, "No es Grande !!");
                        break;
                    case Jugada.ERROR_GRANDE_LLENA:
                        JOptionPane.showMessageDialog(rootPane, "Ya no puedes poner mas grandes !!");
                        break;
                    case Jugada.ERROR_CASILLA_LLENA:
                        JOptionPane.showMessageDialog(rootPane, "ERROR casilla llena !!");
                        break;
                }

                dibujador.Dibujar(JuegoCompartido.listaJugadores);

            } else {
                JOptionPane.showMessageDialog(rootPane, "Por favor seleccione una jugada primero.");
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "No has hecho ninguna Jugada !!");
        }
        
    }//GEN-LAST:event_btn_gastarturnoActionPerformed

    private void btn_lanzarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lanzarDadosActionPerformed
        // TODO add your handling code here:
        System.out.println("CANTIDAD DADOS SELECCIONADOS = " + cubilete.cantidadDadosSeleccionados());
        if (cubilete.cantidadDadosSeleccionados() > 0) {
            if (cubilete.LanzarCubilete()) {
                MostrarLosDados(cubilete);
                lbl_lanzamientosRestantes.setText(cubilete.getLanzamientos() + "");
                
                switch (cubilete.getLanzamientos()) {
                    case 0:
                        HabilitarVolteos(true);
                        HabilitarRadioButtons(false);
                        break;
                    case 1:
                        HabilitarRadioButtons(true);
                        PonerSeleccionDeCheckboxesEn(false);
                        HabilitarCheckboxes(true);
                        break;
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Ya no puedes lanzar los dados!");
            }
            
        } else {
            JOptionPane.showMessageDialog(rootPane, "No seleccionó ningun dado para tirar !!");
        }
    }//GEN-LAST:event_btn_lanzarDadosActionPerformed

    private void btn_voltearDado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltearDado1ActionPerformed
        // TODO add your handling code here:
        if (cubilete.VoltearDado(0)) {
            txt_dado1.setText("" + cubilete.getDado(0).getValor());
            HabilitarRadioButtons(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Ya no puedes voltear mas dados !!");
        }
    }//GEN-LAST:event_btn_voltearDado1ActionPerformed

    private void btn_voltearDado2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltearDado2ActionPerformed
        // TODO add your handling code here:
        if (cubilete.VoltearDado(1)) {
            txt_dado2.setText("" + cubilete.getDado(1).getValor());
            HabilitarRadioButtons(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Ya no puedes voltear mas dados !!");
        }
    }//GEN-LAST:event_btn_voltearDado2ActionPerformed

    private void btn_voltearDado3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltearDado3ActionPerformed
        // TODO add your handling code here:
        if (cubilete.VoltearDado(2)) {
            txt_dado3.setText("" + cubilete.getDado(2).getValor());
            HabilitarRadioButtons(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Ya no puedes voltear mas dados !!");
        }
    }//GEN-LAST:event_btn_voltearDado3ActionPerformed

    private void btn_voltearDado4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltearDado4ActionPerformed
        // TODO add your handling code here:
        if (cubilete.VoltearDado(3)) {
            txt_dado4.setText("" + cubilete.getDado(3).getValor());
            HabilitarRadioButtons(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Ya no puedes voltear mas dados !!");
        }
    }//GEN-LAST:event_btn_voltearDado4ActionPerformed

    private void btn_voltearDado5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltearDado5ActionPerformed
        // TODO add your handling code here:
        if (cubilete.VoltearDado(4)) {
            txt_dado5.setText("" + cubilete.getDado(4).getValor());
            HabilitarRadioButtons(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Ya no puedes voltear mas dados !!");
        }
    }//GEN-LAST:event_btn_voltearDado5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        for (Dado dado : cubilete.getDados()) {
            dado.setValor(1);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
//                PantallaJuego pantallaJuego = new PantallaJuego();
//                pantallaJuego.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_gastarturno;
    private javax.swing.JButton btn_lanzarDados;
    private javax.swing.JButton btn_voltearDado1;
    private javax.swing.JButton btn_voltearDado2;
    private javax.swing.JButton btn_voltearDado3;
    private javax.swing.JButton btn_voltearDado4;
    private javax.swing.JButton btn_voltearDado5;
    private javax.swing.ButtonGroup buttonGroupJugadas;
    private javax.swing.JCheckBox chkbox_usarDado1;
    private javax.swing.JCheckBox chkbox_usarDado2;
    private javax.swing.JCheckBox chkbox_usarDado3;
    private javax.swing.JCheckBox chkbox_usarDado4;
    private javax.swing.JCheckBox chkbox_usarDado5;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lbl_lanzamientosRestantes;
    private javax.swing.JPanel pnl_dados;
    private javax.swing.JPanel pnl_guardarJugada;
    private javax.swing.JPanel pnl_meza;
    private javax.swing.JPanel pnl_papel;
    private javax.swing.JRadioButton radbtn_balas;
    private javax.swing.JRadioButton radbtn_cuadras;
    private javax.swing.JRadioButton radbtn_escalera;
    private javax.swing.JRadioButton radbtn_full;
    private javax.swing.JRadioButton radbtn_grande;
    private javax.swing.JRadioButton radbtn_poker;
    private javax.swing.JRadioButton radbtn_quinas;
    private javax.swing.JRadioButton radbtn_senas;
    private javax.swing.JRadioButton radbtn_tontos;
    private javax.swing.JRadioButton radbtn_trenes;
    private javax.swing.JTextField txt_dado1;
    private javax.swing.JTextField txt_dado2;
    private javax.swing.JTextField txt_dado3;
    private javax.swing.JTextField txt_dado4;
    private javax.swing.JTextField txt_dado5;
    // End of variables declaration//GEN-END:variables

    @Override
    public void OnMensajeRecibido(EventoMensaje eventoMensaje) {
        //
    }

    @Override
    public void OnIdentificado(EventoMensaje eventoMensaje) {
        //
    }

    @Override
    public void OnLoginOK(EventoMensaje eventoMensaje) {
        //
    }

    @Override
    public void OnRegistroOK(EventoMensaje eventoMensaje) {
        //
    }
    
    
    
    
    private int CantidadRadioButtonSeleccionada() {
        int acu = 0;
        for (Enumeration<AbstractButton> buttons = buttonGroupJugadas.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            
            if (button.isSelected()) {
                acu++;
            }
        }
        return acu;
    }
    
    private void HabilitarRadioButtons(boolean habilitar) {
        radbtn_balas.setEnabled(habilitar);
        radbtn_tontos.setEnabled(habilitar);
        radbtn_trenes.setEnabled(habilitar);
        radbtn_cuadras.setEnabled(habilitar);
        radbtn_quinas.setEnabled(habilitar);
        radbtn_senas.setEnabled(habilitar);
        radbtn_escalera.setEnabled(habilitar);
        radbtn_full.setEnabled(habilitar);
        radbtn_poker.setEnabled(habilitar);
        radbtn_grande.setEnabled(habilitar);
    }
    
    private void PonerSeleccionRadioButtonsEn(boolean estado) {
        radbtn_balas.setSelected(estado);
        radbtn_tontos.setSelected(estado);
        radbtn_trenes.setSelected(estado);
        radbtn_cuadras.setSelected(estado);
        radbtn_quinas.setSelected(estado);
        radbtn_senas.setSelected(estado);
        radbtn_escalera.setSelected(estado);
        radbtn_full.setSelected(estado);
        radbtn_poker.setSelected(estado);
        radbtn_grande.setSelected(estado);
    }
    
    private void HabilitarVolteos(boolean habilitar) {
        btn_voltearDado1.setEnabled(habilitar);
        btn_voltearDado2.setEnabled(habilitar);
        btn_voltearDado3.setEnabled(habilitar);
        btn_voltearDado4.setEnabled(habilitar);
        btn_voltearDado5.setEnabled(habilitar);
    }
    
    private void HabilitarCheckboxes(boolean habilitar) {
        chkbox_usarDado1.setEnabled(habilitar);
        chkbox_usarDado2.setEnabled(habilitar);
        chkbox_usarDado3.setEnabled(habilitar);
        chkbox_usarDado4.setEnabled(habilitar);
        chkbox_usarDado5.setEnabled(habilitar);
    }
    
    private void PonerSeleccionDeCheckboxesEn(boolean estado) {
        chkbox_usarDado1.setSelected(estado);
        chkbox_usarDado2.setSelected(estado);
        chkbox_usarDado3.setSelected(estado);
        chkbox_usarDado4.setSelected(estado);
        chkbox_usarDado5.setSelected(estado);
    }
    
    private void LimpiarDados() {
        txt_dado1.setText("");
        txt_dado2.setText("");
        txt_dado3.setText("");
        txt_dado4.setText("");
        txt_dado5.setText("");
    }
    
    private void HabilitarPanelesDeJuego(boolean habilitar) {
//        pnl_dados.setVisible(habilitar);
//        pnl_guardarJugada.setVisible(habilitar);
    }
    
    private void MostrarLosDados(Cubilete cubilete) {
        txt_dado1.setText(cubilete.getDado(0).getValor() + "");
        txt_dado2.setText(cubilete.getDado(1).getValor() + "");
        txt_dado3.setText(cubilete.getDado(2).getValor() + "");
        txt_dado4.setText(cubilete.getDado(3).getValor() + "");
        txt_dado5.setText(cubilete.getDado(4).getValor() + "");
    }
    
    private void PrepararPantallaComienzoJuego() {
        LimpiarDados();
        HabilitarVolteos(false);
        PonerSeleccionDeCheckboxesEn(true);
        HabilitarCheckboxes(false);
        PonerSeleccionRadioButtonsEn(false);
        HabilitarRadioButtons(false);
        
        lbl_lanzamientosRestantes.setText("" + cubilete.getLanzamientos());
        if(jugadorYO.isTurno() && JuegoCompartido.listaJugadores.size()>1) {
            btn_gastarturno.setEnabled(true);
        } else {
            btn_gastarturno.setEnabled(false);
        }
    }
    
    private void PrepararPantallaOnJugadorConectado() {
        if(jugadorYO.isTurno() && JuegoCompartido.listaJugadores.size()>1) {
            btn_gastarturno.setEnabled(true);
        } else {
            btn_gastarturno.setEnabled(false);
        }
    }

    @Override
    public void OnComerzarPartidaOK(EventoMensaje eventoMensaje) {
        //
        System.out.println("ON COMERZAR PARTIDA OK PJ !!");
        //Crea los objetos desde Cero. y los enlaza correctamente.
        
        jugadorYO = new Jugador(JuegoCompartido.clienteSocket.getEventoClienteS().getCliente());
        dibujador = new Dibujador(pnl_papel.getGraphics(), jugadorYO, pnl_papel.getWidth(), pnl_papel.getHeight());
        
        JuegoCompartido.listaJugadores.add(jugadorYO);
        ArrayList<Jugador> listaTemp = ClienteUtils.LeerListaJugadoresExcluyendoTablero(eventoMensaje.getMensaje().getMensajeServidor());
        
        for (Jugador jugador : listaTemp) {
            JuegoCompartido.ActualizarAgregarJugadorEnLista(jugador);
        }
        //ClienteUtils.ActualizarMiJugador(JuegoCompartido.listaJugadores, jugadorYO);
        
        PrepararPantallaComienzoJuego();
        
        dibujador.Dibujar(JuegoCompartido.listaJugadores);
    }

    @Override
    public void OnUnJugadorDesconectado(EventoMensaje eventoMensaje) {
        //
        System.out.println("ON UN JUGADOR SE DESCONECTO PJ !!");
        
        //utilizo la misma herramienta, ya que me sirve para leer N jugadores (genera una Lista). 
        //Pero como solo recibo 1, se que esta en la posicion 0
        ArrayList<Jugador> listaTemp = ClienteUtils.LeerListaJugadoresExcluyendoTablero(eventoMensaje.getMensaje().getMensajeServidor());
        if (!listaTemp.isEmpty()) {
            
            JuegoCompartido.ActualizarJugadorEnLista(listaTemp.get(0));
//            for (Jugador jugador : JuegoCompartido.listaJugadores) {
//                if (jugador.getId() == listaTemp.get(0).getId()) {
//                    jugador.setConectado(false);
//                }
//            }
            
            dibujador.Dibujar(JuegoCompartido.listaJugadores);
        } else {
            System.out.println("No se recibio Ningun Jugador!!");
        }
    }

    @Override
    public void OnUnJugadorConectado(EventoMensaje eventoMensaje) {
        //
        System.out.println("ON UN JUGADOR SE CONECTO PJ !!");
        
        //utilizo la misma herramienta, ya que me sirve para leer N jugadores (genera una Lista). 
        //Pero como solo recibo 1, se que esta en la posicion 0
        ArrayList<Jugador> listaTemp = ClienteUtils.LeerListaJugadoresExcluyendoTablero(eventoMensaje.getMensaje().getMensajeServidor());
        if (!listaTemp.isEmpty()) {
            
            //ACTUALIZO el jugador en la lista (o AGREGO, si lo requiere).
            JuegoCompartido.ActualizarAgregarJugadorEnLista(listaTemp.get(0));
            
            dibujador.Dibujar(JuegoCompartido.listaJugadores);
            
            PrepararPantallaOnJugadorConectado();
        } else {
            System.err.println("No se recibio Ningun Jugador!!");
        }
    }

    @Override
    public void OnConectado(EventoCliente eventoCliente) {
        //
        System.out.println("ON CONECTADO PJ !!");
    }

    @Override
    public void OnDesconectado(EventoCliente eventoCliente) {
        //
        System.out.println("ON DESCONECTADO PJ !!");
        
        JuegoCompartido.Desconectar();
        dibujador.getJugador().setConectado(false);
        dibujador.Dibujar(JuegoCompartido.listaJugadores);
        
        try {
            Thread.sleep(3000);
            Juego.pantallaLogin.setVisible(true);
            Juego.pantallaJuego.setVisible(false);
        } catch (InterruptedException ex) {
            Logger.getLogger(PantallaJuego.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void OnGastarTurnoOK(EventoMensaje eventoMensaje) {
        //
        System.out.println("ON GASTAR TURNO OK PJ !!");
        
        cubilete.Reset();

        //Leemos el mensaje, y actualizamos a los jugadores de paso.
        ClienteUtils.ActualizarListaFromMensajePostTurno(eventoMensaje.getMensaje().getMensajeServidor(), jugadorYO);
        
        //verificamos si hay un ganador en la Lista
        Jugador jugadorGanador = JuegoCompartido.ObtenerGanador();
        if (jugadorGanador != null) {
            JOptionPane.showMessageDialog(rootPane, "Partida Terminada. Ganador es ¡¡¡ " + jugadorGanador.getNombre().toUpperCase() + " !!! ");
            
            JuegoCompartido.Desconectar();
            Juego.pantallaLogin.setVisible(true);
            Juego.pantallaJuego.setVisible(false);
            
            //Se puede DespacharUnEventoOnGanador
        } else {
            dibujador.Dibujar(JuegoCompartido.listaJugadores);

            PrepararPantallaComienzoJuego();
        }

    }
    
    @Override
    public void OnHayPartidaEnCurso(EventoMensaje eventoMensaje) {
        //
        System.out.println("ON HAY PARTIDA EN CURSO PJ !!");
        
        //Si hay una partida en curso Debe recibir la Lista de Jugadores completa, incluido El mismo, para actualizarse.
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
        contPaint++;
        boolean sw = false;
        if (dibujador!=null) {
            dibujador.Dibujar(JuegoCompartido.listaJugadores);
            sw = true;
        }
        System.out.println("VOID PAINT(GRAPHICS) usado = " + contPaint + " veces. [DIBUJADOR USADO? = " + sw + "]");
    }
}
